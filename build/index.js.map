{"version":3,"file":"index.js","mappings":"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","sources":["webpack:///external window [\"wp\",\"element\"]","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./src/index.js"],"sourcesContent":["module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const { registerBlockType } = wp.blocks;\r\nconst { \r\n    RichText,\r\n    InspectorControls,\r\n    InspectorAdvancedControls,\r\n    ColorPalette,\r\n    BlockControls,\r\n    AlignmentToolbar\r\n} = wp.editor;\r\nconst { PanelBody,\r\n        TextControl,\r\n        SelectControl\r\n} = wp.components;\r\n\r\n \r\nregisterBlockType('bproject/custom-btn', {\r\n\r\n    // built-in attributes\r\n\r\n    title: 'Task Button',\r\n    description: 'It is just a simple button',\r\n    icon: 'format-image',\r\n    category: 'layout',\r\n\r\n    // custom attributes\r\n    attributes: {\r\n        buttonAlignment: {\r\n            type: 'string',\r\n            default: 'none',\r\n        },\r\n        buttonText: {\r\n            type: 'string'\r\n        },\r\n        buttonBackground: {\r\n            type: 'string',\r\n            default: '#329ea9'\r\n        },\r\n        buttonColor: {\r\n            type: 'string',\r\n            default: '#ffffff'\r\n        },\r\n        positionButton: {\r\n            type: 'string',\r\n        }\r\n    },\r\n\r\n    // custom functions\r\n\r\n    // built-in functions\r\n\r\n    edit: ( { attributes, setAttributes } ) => {\r\n\r\n        const { buttonAlignment,\r\n                buttonText,\r\n                buttonBackground,\r\n                buttonColor,\r\n                positionButton\r\n            } = attributes;\r\n\r\n        function onButtonTextChange(newButtonText){\r\n            setAttributes( { buttonText: newButtonText } );\r\n        }\r\n\r\n        function onButtonBackgroundChange(newBackground) {\r\n            setAttributes( { buttonBackground: newBackground } )\r\n        }\r\n\r\n        function onButtonColorChange(newButtonColor) {\r\n            setAttributes( { buttonColor: newButtonColor } )\r\n        }\r\n\r\n        function buttonAlignmentChange(newButtonAlignment) {\r\n            setAttributes( { buttonAlignment: newButtonAlignment = undefined ? 'none' : newButtonAlignment } )\r\n        }\r\n\r\n        function buttonPositionChange(newButtonPosition) {\r\n            setAttributes( { positionButton: newButtonPosition } )\r\n        }\r\n\r\n        return ([\r\n            <InspectorControls style={ { marginBottom: '32px' } }>\r\n\r\n                <PanelBody title={ 'Button Setting' }>\r\n                    <p><strong>Button Text:</strong></p>\r\n                    <TextControl value={ buttonText } onChange={ onButtonTextChange } />\r\n\r\n                    <p><strong>Button Background:</strong></p>\r\n                    <ColorPalette value={ buttonBackground } onChange={ onButtonBackgroundChange } />\r\n\r\n                    <p><strong>Button Color:</strong></p>\r\n                    <ColorPalette value={ buttonColor } onChange={ onButtonColorChange } />\r\n\r\n                    <p><strong>Button Position:</strong></p>\r\n\r\n                    <SelectControl\r\n\t\t\t\t\t\t\tlabel=\"Button Position\"\r\n\t\t\t\t\t\t\tvalue={ positionButton }\r\n\t\t\t\t\t\t\toptions={ [\r\n\t\t\t\t\t\t\t\t{ value: 'flex-start', label: 'flex-start' },\r\n\t\t\t\t\t\t\t\t{ value: 'center', label: 'center' },\r\n\t\t\t\t\t\t\t\t{ value: 'flex-end', label: 'flex-end' },\r\n\t\t\t\t\t\t\t] }\r\n\t\t\t\t\t\t\tonChange={ buttonPositionChange }\r\n                    />\r\n\r\n                </PanelBody>\r\n            </InspectorControls>,\r\n\r\n            <InspectorAdvancedControls>\r\n            <TextControl\r\n                label=\"HTML anchor\"\r\n                value={ attributes.anchor }\r\n                onChange={ ( nextValue ) => {\r\n                    setAttributes( {\r\n                        anchor: nextValue,\r\n                    } );\r\n                } }\r\n            />\r\n            </InspectorAdvancedControls>,\r\n\r\n            <div className=\"container\"  style={ { \r\n                                        display: 'flex',\r\n                                        justifyContent: positionButton\r\n            } }>\r\n                {\r\n                    <BlockControls>\r\n                        <AlignmentToolbar value={ buttonAlignment } onChange= { buttonAlignmentChange } />\r\n                    </BlockControls>\r\n                }\r\n                <RichText   key=\"editable\"\r\n                            tagName=\"div\"\r\n                            placeholder=\"Add Button Text...\"\r\n                            value={ buttonText }\r\n                            onChange= { onButtonTextChange }\r\n                            className= \"task-button\"\r\n                            style={ {   background: buttonBackground,\r\n                                        color: buttonColor,\r\n                                        textAlign: buttonAlignment,\r\n                                        display: \"inline-flex\",\r\n                                        flexDirection: \"row\",\r\n                                        padding: '16px 32px',\r\n                                        alignItems: 'center',\r\n                                        borderRadius: '3px', } } />\r\n            </div>\r\n        ]);\r\n    },\r\n\r\n    save: ( { attributes } ) => {\r\n\r\n        const { buttonAlignment,\r\n            buttonText,\r\n            buttonBackground,\r\n            buttonColor,\r\n            positionButton\r\n        } = attributes;\r\n\r\n        return (\r\n            <div class=\"container\" style={ { \r\n                display: 'flex',\r\n                justifyContent: positionButton\r\n            } }>\r\n                <button className= \"task-button\" style={ { \r\n                    background: buttonBackground,\r\n                    color: buttonColor,\r\n                    textAlign: buttonAlignment,\r\n                    display: \"inline-block\",\r\n                    padding: '16px 32px',\r\n                    borderRadius: '3px',\r\n                    border: 'none'\r\n                 } }>\r\n                    { buttonText }</button>\r\n            </div>\r\n        );\r\n    }\r\n})"],"names":["registerBlockType","wp","blocks","RichText","InspectorControls","InspectorAdvancedControls","ColorPalette","BlockControls","AlignmentToolbar","editor","PanelBody","TextControl","SelectControl","components","title","description","icon","category","attributes","buttonAlignment","type","default","buttonText","buttonBackground","buttonColor","positionButton","edit","setAttributes","onButtonTextChange","newButtonText","onButtonBackgroundChange","newBackground","onButtonColorChange","newButtonColor","buttonAlignmentChange","newButtonAlignment","undefined","buttonPositionChange","newButtonPosition","marginBottom","value","label","anchor","nextValue","display","justifyContent","background","color","textAlign","flexDirection","padding","alignItems","borderRadius","save","border"],"sourceRoot":""}
